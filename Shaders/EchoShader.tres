[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode depth_draw_opaque, cull_disabled, ambient_light_disabled, blend_add, shadows_disabled;

uniform vec4 color : hint_color;
uniform float fresnel_power = 1.0;
uniform float edge_intensity = 2.0;
uniform float fill_amount : hint_range(0, 1) = 0.1;
uniform vec2 pattern_uv_offset = vec2(6.0, 3.0);
uniform sampler2D pattern_texture : hint_albedo;

void fragment() {
	float fresnel = pow(1.0 - dot(NORMAL, VIEW), fresnel_power) * edge_intensity;
	fresnel = fresnel + fill_amount;
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]) + VERTEX.z;
	depth = pow(1.0 - clamp(depth, 0, 1), fresnel_power) * edge_intensity;
	fresnel = fresnel + depth;
	ALBEDO = vec3(0);
	EMISSION = color.rgb;
	ALPHA = smoothstep(0.0, 1.0, fresnel); 
}
"

[resource]
shader = SubResource( 1 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/fresnel_power = 5.0
shader_param/edge_intensity = 1.0
shader_param/fill_amount = 0.001
shader_param/pattern_uv_offset = Vector2( 6, 3 )
